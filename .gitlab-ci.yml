image: docker:stable

variables:
  DOCKER_REGISTRY: docker.miracum.org
  PROJECT_PATH: /miracum-etl/fhir-gateway
  IMAGE_PATH: $DOCKER_REGISTRY$PROJECT_PATH

.docker_registry:
  before_script:
    - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USERNAME $DOCKER_REGISTRY --password-stdin
  after_script:
    - docker logout $DOCKER_REGISTRY

.job_defaults:
  only:
    - master
    - merge_requests

include:
  - project: "devops/ci-templates"
    file: "/preflight/.tidy-files.yml"
  - project: "devops/ci-templates"
    file: "/linting/.yamllint.yml"
  - project: "devops/ci-templates"
    file: "/linting/.hadolint.yml"
  - project: "devops/ci-templates"
    file: "/linting/.markdownlint.yml"
  - project: "devops/ci-templates"
    file: "/versioning/.semantic-release-get-version.yml"
  - project: "devops/ci-templates"
    file: "/image-scanning/.trivy-scan.yml"
  - project: "devops/ci-templates"
    file: "/release/.gitlab-release.yml"

stages:
  - preflight
  - lint
  - version
  - build
  - test
  - release

check file tidiness:
  variables:
    IGNORE: ".git,*.min.js,*.min.css,*.drawio"
  extends: .job_defaults

hadolint:
  extends: .job_defaults

yamllint:
  extends: .job_defaults

markdownlint:
  extends: .job_defaults

get next version:
  extends: .job_defaults

build:
  extends:
    - .job_defaults
    - .docker_registry
  stage: build
  script:
    - export VERSION=$(cat .VERSION)
    - docker build -t $IMAGE_PATH:$CI_COMMIT_SHORT_SHA
      --build-arg VERSION=$VERSION
      --build-arg GIT_REF=$CI_COMMIT_SHA
      --build-arg BUILD_TIME="$(date -Is)" .
    - docker push $IMAGE_PATH:$CI_COMMIT_SHORT_SHA
  coverage: '/\d+.\d+ \% covered/'

trivy:
  extends: .job_defaults
  variables:
    IMAGE_FQN: $DOCKER_REGISTRY$PROJECT_PATH:$CI_COMMIT_SHORT_SHA

e2e:
  extends:
    - .job_defaults
    - .docker_registry
  stage: test
  image:
    name: docker/compose:1.26.0
    entrypoint: [""]
  before_script:
    - export IMAGE_TAG=$CI_COMMIT_SHORT_SHA
  script:
    - docker-compose -p $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-e2e -f tests/e2e/docker-compose.yml build
    - docker-compose -p $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-e2e -f tests/e2e/docker-compose.yml run gpasinit
    - docker-compose -p $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-e2e -f tests/e2e/docker-compose.yml run tester
  after_script:
    - docker-compose -p $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-e2e -f tests/e2e/docker-compose.yml down --volumes --remove-orphans

push to harbor:
  extends: .docker_registry
  stage: release
  script:
    - IMAGE_TAG=$(cat .VERSION)
    - docker pull $IMAGE_PATH:$CI_COMMIT_SHORT_SHA
    - docker tag $IMAGE_PATH:$CI_COMMIT_SHORT_SHA $IMAGE_PATH:v$IMAGE_TAG
    - docker push $IMAGE_PATH:v$IMAGE_TAG
  only:
    - master
